{"version":3,"file":"bundle.js","sources":["PieSpritesPos.js","getData.js","getJson.js","PieSprite.js","Texture.js","TerrainTextureMapping.js","fragmentShader.js","vertexShader.js","TerrainGenerator.js","index.js"],"sourcesContent":["const {SpriteMaterial, Sprite, Texture } = THREE;\n\nexport let WoWZonesPosition = [\n  {Name:'Durotar', x: -277.78955311352763, y: 24, z: 38.67265811035771},\n  {Name:'Azshara',  x: -236.90184905507408, y: 24, z: -18.04310167920776 },\n  {Name:'The Barrens', x: -324.3342548486014, y: 24, z: 42.40533222353124 },\n  {Name:'The Barrens', x: -329.55571944397286, y: 24, z: 77.34899932128461},\n  {Name:'Mulgore', x: -360.32731675044806, y: 24, z: 79.35111158362415},\n  {Name:'Ashenvale', x: -343.5705344278353, y: 24, z: 6.189150329805115},\n  {Name:'Felwood',  x: -350.66999035361914, y: 44, z: -64.92611869671175 },\n  {Name:'Darkshore',  x: -385.31446419961196, y:24, z: -76.68302114072709},\n  {Name:'Winterspring', x: -284.57397200584023, y: 54, z: -81.47558729825629},\n  {Name:'Moonglade',  x: -321.13909336551916, y: 48, z: -97.74738874506933},\n  {Name:'Teldrassil', x: -402.9094076156481, y: 78, z: -131.7407672265867},\n  //{Name:'Mount Hyjal', x: -307.3388799075823, y: 94, z: -47.834504859241434 },\n  {Name:'Stonetalon Mountains',  x: -399.0184945319111, y:30, z: 20.7443401431147},\n  {Name:'Desolace', x: -399.5848529640793, y: 24, z: 64.0883236559438},\n  {Name:'Dustwallow Marsh', x: -287.0818159107408, y: 24, z: 120.27639521544074},\n  {Name:'Thousand Needles', x: -289.78409117229796, y: 30, z: 157.76589871394427},\n  {Name:'Feralas',x: -410.16130255590474, y: 34, z: 122.75078982610768 },\n  {Name:'Silithus', x: -388.9210583914758, y: 24, z: 180.21265329905296 },\n  {Name:'UnGoro Crater',  x: -344.53177754459716, y: 24, z: 176.73378268582215},\n  {Name:'Tanaris',  x: -300.38527277906513, y:30, z: 200.80222710443277},\n  {Name:'Uldum', x: -364.4577852044935, y: 38, z: 234.19477795867547},\n  \n  {Name:'The Cape of Stranglethorn', x: 320.40466464778575, y: 24, z: 238.1933703285855},\n  {Name:'Northern Stranglethorn', x: 328.4634388211147, y: 24, z: 204.69122514469524},\n  {Name:'Blasted Lands', x: 391.47520078921195, y: 24, z: 191.7275989959382},\n  {Name:'Swamp of Sorrows', x: 402.0329790005663, y: 24, z: 177.5969478535933},\n  {Name:'Duskwood',x: 336.8137692532394, y: 30, z: 176.69531634588702},\n  {Name:'Westfall', x: 295.8557533417584, y: 24, z: 178.16070679515727},\n  {Name:'Redridge Mountains',  x: 386.95887400109643, y: 30, z: 157.47511444858765 },\n  {Name:'Elwynn Forest',  x: 333.4699859916333, y: 24, z: 164.0337620546048},\n  {Name:'Burning Steppes', x: 363.3163146357488, y: 34, z: 136.76694774590567},\n  {Name:'Searing Gorge',  x: 355.61022578427736, y: 34, z: 114.0631759475665},\n  {Name:'Badlands', x: 391.7454864528726, y: 34, z: 111.45380501148495},\n  {Name:'Loch Modan', x: 395.21550049260804, y: 34, z: 82.43017205334165 },\n  {Name:'Dun Morogh',  x: 337.29679068468414, y: 44, z: 87.79113862904887},\n  {Name:'Twilight Highlands',  x: 432.5227454002263, y: 28, z: 60.76836375472595 },\n  {Name:'Wetlands',  x: 354.934918415537, y: 24, z: 43.181241103898316},\n\n  {Name:'Arathi Highlands', x: 379.83639451845283, y: 24, z: 13.520356001944405},\n  {Name:'The Hinterlands',  x: 391.5695800872891, y: 34, z: -12.908190028917076},\n\n  {Name:'Hillsbrad Foothills', x: 345.7407475978628, y: 24, z: -1.890201373109902},\n  {Name:'Gilneas', x: 296.52793626675634, y: 24, z: 17.84908060196977},\n  {Name:'Silverpine Forest', x: 308.03288950112943, y: 24, z: -18.1261526897862},\n  {Name:'Tirisfal Glades', x: 322.59503720083575, y: 24, z: -51.44381451717823 },\n  {Name:'Western Plaguelands', x: 357.5636429226708, y: 30, z: -42.876969500513084},\n  {Name:'Eastern Plaguelands', x: 405.8146279931575, y: 34, z: -57.98487867077536},\n  \n  \n];\n\n\n//export function ZonesToSprites(scene, yey){\n//  let texture_0=spriteTexture('Durotar', yey); PieSprite(scene, 'Durotar',30,-277.78955311352763,24,38.67265811035771);let texture_1=spriteTexture('Azshara', yey); PieSprite(scene, 'Azshara',30,-236.90184905507408,24,-18.04310167920776);let texture_2=spriteTexture('Northen Barrens', yey); PieSprite(scene, 'Northen Barrens',30,-324.3342548486014,24,42.40533222353124);let texture_3=spriteTexture('Southern Barrens', yey); PieSprite(scene, 'Southern Barrens',30,-329.55571944397286,24,77.34899932128461);let texture_4=spriteTexture('Mulgore', yey); PieSprite(scene, 'Mulgore',30,-360.32731675044806,24,79.35111158362415);let texture_5=spriteTexture('Ashenvale', yey); PieSprite(scene, 'Ashenvale',30,-343.5705344278353,24,6.189150329805115);let texture_6=spriteTexture('Felwood', yey); PieSprite(scene, 'Felwood',30,-350.66999035361914,44,-64.92611869671175);let texture_7=spriteTexture('Darkshore', yey); PieSprite(scene, 'Darkshore',30,-385.31446419961196,24,-76.68302114072709);let texture_8=spriteTexture('Winterspring', yey); PieSprite(scene, 'Winterspring',30,-284.57397200584023,54,-81.47558729825629);let texture_9=spriteTexture('Moonglade', yey); PieSprite(scene, 'Moonglade',30,-321.13909336551916,48,-97.74738874506933);let texture_10=spriteTexture('Teldrassil', yey); PieSprite(scene, 'Teldrassil',30,-402.9094076156481,78,-131.7407672265867);let texture_11=spriteTexture('Mount Hyjal', yey); PieSprite(scene, 'Mount Hyjal',30,-307.3388799075823,94,-47.834504859241434);let texture_12=spriteTexture('Stonetalon Mountains', yey); PieSprite(scene, 'Stonetalon Mountains',30,-399.0184945319111,30,20.7443401431147);let texture_13=spriteTexture('Desolace', yey); PieSprite(scene, 'Desolace',30,-399.5848529640793,24,64.0883236559438);let texture_14=spriteTexture('Dustwallow Marsh', yey); PieSprite(scene, 'Dustwallow Marsh',30,-287.0818159107408,24,120.27639521544074);let texture_15=spriteTexture('Thousand Needles', yey); PieSprite(scene, 'Thousand Needles',30,-289.78409117229796,30,157.76589871394427);let texture_16=spriteTexture('Feralas', yey); PieSprite(scene, 'Feralas',30,-410.16130255590474,34,122.75078982610768);let texture_17=spriteTexture('Silithus', yey); PieSprite(scene, 'Silithus',30,-388.9210583914758,24,180.21265329905296);let texture_18=spriteTexture('UnGoro Crater', yey); PieSprite(scene, 'UnGoro Crater',30,-344.53177754459716,24,176.73378268582215);let texture_19=spriteTexture('Tanaris', yey); PieSprite(scene, 'Tanaris',30,-300.38527277906513,30,200.80222710443277);let texture_20=spriteTexture('Uldum', yey); PieSprite(scene, 'Uldum',30,-364.4577852044935,38,234.19477795867547);let texture_21=spriteTexture('The Cape of Stranglethorn', yey); PieSprite(scene, 'The Cape of Stranglethorn',30,320.40466464778575,24,238.1933703285855);let texture_22=spriteTexture('Northern Stranglethorn', yey); PieSprite(scene, 'Northern Stranglethorn',30,328.4634388211147,24,204.69122514469524);let texture_23=spriteTexture('Blasted Lands', yey); PieSprite(scene, 'Blasted Lands',30,391.47520078921195,24,191.7275989959382);let texture_24=spriteTexture('Swamp of Sorrows', yey); PieSprite(scene, 'Swamp of Sorrows',30,402.0329790005663,24,177.5969478535933);let texture_25=spriteTexture('Duskwood', yey); PieSprite(scene, 'Duskwood',30,336.8137692532394,30,176.69531634588702);let texture_26=spriteTexture('Westfall', yey); PieSprite(scene, 'Westfall',30,295.8557533417584,24,178.16070679515727);let texture_27=spriteTexture('Redridge Mountains', yey); PieSprite(scene, 'Redridge Mountains',30,386.95887400109643,30,157.47511444858765);let texture_28=spriteTexture('Elwynn Forest', yey); PieSprite(scene, 'Elwynn Forest',30,333.4699859916333,24,164.0337620546048);let texture_29=spriteTexture('Burning Steppes', yey); PieSprite(scene, 'Burning Steppes',30,363.3163146357488,34,136.76694774590567);let texture_30=spriteTexture('Searing Gorge', yey); PieSprite(scene, 'Searing Gorge',30,355.61022578427736,34,114.0631759475665);let texture_31=spriteTexture('Badlands', yey); PieSprite(scene, 'Badlands',30,391.7454864528726,34,111.45380501148495);let texture_32=spriteTexture('Loch Modan', yey); PieSprite(scene, 'Loch Modan',30,395.21550049260804,34,82.43017205334165);let texture_33=spriteTexture('Dun Morogh', yey); PieSprite(scene, 'Dun Morogh',30,337.29679068468414,44,87.79113862904887);let texture_34=spriteTexture('Twilight Highlands', yey); PieSprite(scene, 'Twilight Highlands',30,432.5227454002263,28,60.76836375472595);let texture_35=spriteTexture('Wetlands', yey); PieSprite(scene, 'Wetlands',30,354.934918415537,24,43.181241103898316);let texture_36=spriteTexture('Arathi Highlands', yey); PieSprite(scene, 'Arathi Highlands',30,379.83639451845283,24,13.520356001944405);let texture_37=spriteTexture('The Hinterlands', yey); PieSprite(scene, 'The Hinterlands',30,391.5695800872891,34,-12.908190028917076);let texture_38=spriteTexture('Hillsbrad Foothills', yey); PieSprite(scene, 'Hillsbrad Foothills',30,345.7407475978628,24,-1.890201373109902);let texture_39=spriteTexture('Gilneas', yey); PieSprite(scene, 'Gilneas',30,296.52793626675634,24,17.84908060196977);let texture_40=spriteTexture('Silverpine Forest', yey); PieSprite(scene, 'Silverpine Forest',30,308.03288950112943,24,-18.1261526897862);let texture_41=spriteTexture('Tirisfal Glades', yey); PieSprite(scene, 'Tirisfal Glades',30,322.59503720083575,24,-51.44381451717823);let texture_42=spriteTexture('Western Plaguelands', yey); PieSprite(scene, 'Western Plaguelands',30,357.5636429226708,30,-42.876969500513084);let texture_43=spriteTexture('Eastern Plaguelands', yey); PieSprite(scene, 'Eastern Plaguelands',30,405.8146279931575,34,-57.98487867077536);\n//} \n\n//var obj = {};\n///for ( let i = 0; i < WoWZonesPosition.length; i++ ) {\n /// let material = new SpriteMaterial({ map: spriteTexture( String(WoWZonesPosition[i]['Name'], 0))});\n /// let sprite = new Sprite(material);\n\t//obj[WoWZonesPosition[i]['Name']]  = material\n//}\n\n\n//console.log(obj['Arathi Highlands']) \n\n//export function crtZonesSprites() {\n  //let _arrString = `` ;\n  //for ( let i = 0; i < WoWZonesPosition.length; i++ ) {\n     //window['texture_' + i] = JSON.stringify(obj[WoWZonesPosition[i]['Name']]);\n    //_arrString += 'let texture_'+ String(i) + '=' + JSON.stringify(obj[WoWZonesPosition[i]['Name']]) + '; '\n    //_arrString += 'let texture_'+ String(i) + '=spriteTexture('+ '\\''+ String(WoWZonesPosition[i]['Name']) + '\\'' + ', yey); '\n\t\t//PieSprite(scene, JSON.stringify(obj[WoWZonesPosition[i]['Name']]), 30,  WoWZonesPosition[i]['x'], WoWZonesPosition[i]['y'], WoWZonesPosition[i]['z']); \n\t\t//_arrString += 'PieSprite(scene, '+ 'texture_'+ String(i) +',30,'+WoWZonesPosition[i]['x']+','+WoWZonesPosition[i]['y']+','+WoWZonesPosition[i]['z']+');'\n//  }\n//  return _arrString;\n//}\n\n//export function textureUpdate() {\n // let _arrString = '';\n  //for ( let i = 0; i < WoWZonesPosition.length; i++ ) {\n  // _arrString += 'texture_'+String(i)+'.needsUpdate = true; '\n//\t}\n // return _arrString;\n//}\n","import { csv } from 'd3';\n\nconst csvUrl = 'https://gist.githubusercontent.com/meperezcuello/a766abb9028b1efafa764dfa5922eb1a/raw/3b3decadf3c8b05dbc602b4d30593a071763f988/wow_handled_data_final.csv';\nconst wow_2018_analytics = 'https://gist.githubusercontent.com/meperezcuello/7e760f5e4c9d4803f3daa66764768a33/raw/7b742b6c54dc85116fa91b420cdf8baefe3a85f9/wow_2018_analytics.csv';\n\nfunction _FilterCond(data, value) {\n    let filteredData = data.filter(d => d.timestamp === value);\n    return filteredData;\n  }\n\nfunction _FilterZone(data, value) {\n    let filteredData = data.filter(d => d.zone === value);\n    return filteredData;\n  }\n\nexport const getData = async(time, zone) => {\n  const data  = await csv(csvUrl).then(function(data) {\n  data.forEach(function(d) {\n    d.char = +d.char;\n    d.guild = +d.guild\n    d.level = +d.level\n    d.timestamp = +d.timestamp \n  });\n\t\treturn data\n});\n  \n\tlet data_filtered = _FilterZone(_FilterCond(data, time), zone)\n  \n  //return total amount of player per charclass\n  const result = Object.values(data_filtered.reduce((r, o) => (r[o.charclass]\n  ? (r[o.charclass].char += o.char)\n  : (r[o.charclass] = {...o}), r), {}));\n  \n  //return total amount of player per zone\n  const result_per_zone = Object.values(data_filtered.reduce((r, o) => (r[o.zone]\n  ? (r[o.zone].char += o.char)\n  : (r[o.zone] = {...o}), r), {}));\n  \n  return result_per_zone;\n};\n\nexport const getWoW2018 = async() => {\n\tconst data = await csv(wow_2018_analytics)\n  return data;\n};\n  ","import { json } from 'd3';\n\nconst jsonUrl = 'https://gist.githubusercontent.com/meperezcuello/45dbb3c65d5834bfefc14f95cd253e0d/raw/c4970b83c9130c2d3a8a5a420cfffdd261582e9b/data.json'\n\nexport const getJson = async () => {\n  const data = await json(jsonUrl);\n  return data;\n};\n\n","const {WebGLRenderer, CanvasTexture, SpriteMaterial, Sprite, Texture } = THREE;\nimport {WoWZonesPosition} from './PieSpritesPos';\nimport { getData } from './getData';\nimport { getJson } from './getJson';\n\n\nexport function spriteCanvas(zone, lol) {\n \tvar canvas = document.createElement('canvas');\n  //let canvas = document.getElementById('myCanvas');\n  let context = canvas.getContext(\"2d\")\n\tcanvas.width = 1000;\n\tcanvas.height = 638;\n\tvar width = canvas.width\n  var height = canvas.height\n  var radius = Math.min(width, height) / 2;\n\n\tconst run = async () => {\n \t\tlet data3 =  await getJson();  \n    \n    var maxRow = data3[lol].map(function(row){ return row[2] });\n   \tconst reducer = (accumulator, currentValue) => accumulator + currentValue;\n  \n    var heat = simpleheat(canvas).data(data3[lol]).max(Math.max.apply(null, maxRow)).radius(40, 40);\n    var background = new Image();\n    background.crossOrigin = \"anonymous\";\n    background.src =  'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Azeroth_texture_optimized_final.png';\n    background.onload = function(){\n    context.drawImage(background,0,0, 1000, 638 );\n  }\n    heat.draw(0.05);\n    };\n \n  run();\n  \treturn canvas\n}\n\nexport function spriteTexture(zone, lol) {\n \t\tlet texture = new Texture(spriteCanvas(zone, lol));\n  \ttexture.needsUpdate = true;\n  \ttexture.minFilter = THREE.LinearFilter; // <-- Remove “Texture has been resized” console logs in three.js\n\t\ttexture.magFilter = THREE.LinearFilter;\n    texture.generateMipmaps = false;\n  \treturn texture;\n}\n\n//THIS FUNCTION IS TO ADD A PIE CHART PER ZONE NAME\nexport function PieSprite(scene, texture, radius, x, y, z) {\n  \tlet material = new SpriteMaterial({ map: texture})\n  \tlet sprite = new Sprite( material);\n    sprite.scale.set(2*radius, radius, 1);\n  \tsprite.position.set(x, y+(radius/2), z)\n  \tscene.add(sprite);\n  }","import {PieSprite, spriteTexture} from './PieSprite';\nconst {TextureLoader, RepeatWrapping} = THREE;\n\n// private method, to load texture; can be extended into class (future rev.)\nconst _txtr = (txtrLoad) => {\n    var texture = new TextureLoader().load(txtrLoad);\n    texture.wrapS = texture.wrapT = RepeatWrapping; \n    return texture;\n\t}\n\n// this is how Enums are declared in JS\nexport const Enum  = {};\n \t\tEnum[Enum[\"Nullz\"] = 0] = \"Nullz\";\n    Enum[Enum[\"Nullz\"] = 1] = \"Nullz\";\n    Enum[Enum[\"oceanTexture\"] = 2] = \"oceanTexture\";\n    Enum[Enum[\"sandyTexture\"] = 3] = \"sandyTexture\";\n    Enum[Enum[\"grassTexture\"] = 4] = \"grassTexture\";\n    Enum[Enum[\"rockyTexture\"] = 5] = \"rockyTexture\";\n    Enum[Enum[\"snowyTexture\"] = 6] = \"snowyTexture\";\n \t\tEnum[Enum[\"wowtest\"] = 7] = \"wowtest\";\n\tEnum[Enum[\"wowtest1\"] = 8] = \"wowtest1\";\n\nexport let TextureDB = {\n  \toceanTexture: _txtr('https://raw.githubusercontent.com/stemkoski/stemkoski.github.com/master/Three.js/images/dirt-512.jpg'),\n  \tsandyTexture: _txtr('https://raw.githubusercontent.com/stemkoski/stemkoski.github.com/master/Three.js/images/sand-512.jpg'),\n  \tgrassTexture: _txtr('https://raw.githubusercontent.com/stemkoski/stemkoski.github.com/master/Three.js/images/grass-512.jpg'),\n  \trockyTexture: _txtr('https://raw.githubusercontent.com/stemkoski/stemkoski.github.com/master/Three.js/images/rock-512.jpg'),\n \t\tsnowyTexture: _txtr('https://raw.githubusercontent.com/stemkoski/stemkoski.github.com/master/Three.js/images/snow-512.jpg'),\n  \twowtest: _txtr('https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Azeroth_texture_optimized_final.png'),\n\t\twowtest1: spriteTexture('Durotar', 0),\t\n}\n//https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/texture_alfa_1_optimized.png\n//https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Azeroth_texture_optimized.png","import {Enum, TextureDB} from './Texture.js';\n\n// private method,e rev.)\nexport const meshMapping = (inputs) => {\n    let _dict = [];\n    for ( let i = 0; i < inputs.length; i++ ) {\n    \t\t_dict.push({texture: inputs[i]['texture'], \n                    repeatedness: inputs[i]['repeatedness'], \n                    smoothing: inputs[i]['smoothing'],\n                    obj: TextureDB[inputs[i]['texture']]\n                   })\n    };\n    return _dict;\n}\n\n\nexport let testDict = [\n  {texture:'oceanTexture', repeatedness: 5, smoothing: [0.01, 0.50]},\n  {texture:'sandyTexture', repeatedness: 20, smoothing: [0.50, 0.55]},\n  {texture:'grassTexture', repeatedness: 20, smoothing: [0.55, 0.75]},\n  {texture:'rockyTexture', repeatedness: 10, smoothing: [0.75, 0.90]},\n  {texture:'snowyTexture', repeatedness: 20, smoothing: [0.90, 0.99]},\n];\n  \nexport let TerrainMappingDB = {\n  \ttestMapping: meshMapping(testDict),\n\t}\n\n\n\n","const _Sampler2DLoader = (inputs) => {\n  let _arrString = ` `;\n \t const unique = [...new Set(inputs.map(item => item.texture))]; //create one varible per unique texture; if two record repat one var is created.\n    for(let i = 0; i < unique.length; i++) {\n\t\t\t\t_arrString +=  `uniform sampler2D ` + String(inputs[i]['texture']) + \";\"; \n    }\n  console.log(_arrString)\n\treturn _arrString\n}  \n\nconst _txtr2DLoader = (inputs) => {\n  let _arrString = ` `;\n    for(let i = 0; i < inputs.length; i++) {\n\t\t\t\t_arrString +=  ` vec4 _txtr`+ String(i) + ` = texture2D( ` + String(inputs[i]['texture']) + `, vUV * ` + String( (inputs[i]['repeatedness']).toFixed(1) ) + \" );\";\n    }\n\treturn _arrString\n}  \n\nconst _smoothStepLoader = (inputs, randSteps = []) => {\n  let _arrString = ` `;\n  let _arr;\n  if (Array.isArray(randSteps) && !randSteps.length) {\n        _arr = inputs; \n      } else {\n        _arr = randSteps;\n      }\n\n    for(let i = 0; i < inputs.length; i++) {\n\t\t\t\t_arrString +=  `  multi_txtr =  mix(multi_txtr, _txtr`+ String(i) + `, smoothstep(` + String(_arr[i]['smoothing'][0]) + `, ` + String(_arr[i]['smoothing'][1]) + \", vAmount));\";\n    }\n  \n\treturn _arrString\n}  \n\nexport default function fragmentShader(dict, rand) {\n  console.log(rand)\n  return _Sampler2DLoader(dict) + `\n    varying vec2 vUV;\n    varying float vAmount;\n\n    varying vec3 vecPos;\n    varying vec3 vecNormal;\n\t\tuniform float lightIntensity;\n\n    struct PointLight {\n      vec3 color;\n      vec3 position; // light position, in camera coordinates\n      float distance; // used for attenuation purposes. Since\n                      // we're writing our own shader, it can\n                      // really be anything we want (as long as\n                      // we assign it to our light in its\n                      // \"distance\" field\n    };\n\n    struct PointLight2 {\n      vec3 color;\n      vec3 position; // light position, in camera coordinates\n      float distance; // used for attenuation purposes. Since\n                      // we're writing our own shader, it can\n                      // really be anything we want (as long as\n                      // we assign it to our light in its\n                      // \"distance\" field\n    };\n\n\n    uniform PointLight pointLights[NUM_POINT_LIGHTS];\n\n    void main() \n    { \n      const float LOG2 = 1.442695;\n\t\t\tfloat fog_density = 0.000000000001; // increase the fog_density to add fog to the shaderMaterial model, e.g., 0.0005 dense      \n      float z = gl_FragCoord.z / gl_FragCoord.w;\n      float fogFactor = exp2( -fog_density *  fog_density * z * z * LOG2 );\n      fogFactor = clamp(fogFactor, 0.0, 1.0);\n      vec4 fog_color = vec4(1,1,1,0);\n\n      vec4 addedLights = vec4(0.0, 0.0, 0.0, 1.0);\n    \tvec3 lightDirection = normalize(vecPos  - pointLights[0].position + vec3(500, 10, 80));\n   \t\taddedLights.rgb += clamp(dot(-lightDirection, vecNormal), 0.0, 1.0) * pointLights[0].color * lightIntensity;\n    \n\t\t\t\n\t\t\t` + _txtr2DLoader(dict) + `\n      vec4 multi_txtr = vec4(0,0,0,1); // 1 stands for alpha to be black, otherwise means 0 white. Note: alpha 0, can reproduce beautiful fog mountain effect.\n  \t\t` + _smoothStepLoader(dict, rand) + `\n      gl_FragColor = mix(fog_color, multi_txtr, fogFactor ); //* addedLights;\n    }  \n`\n}","export default function vertexShader() {\n  return `\n    uniform sampler2D bumpTexture;\n    uniform float bumpScale;\n    varying float vAmount;\n    varying vec2 vUV;\n\n    varying vec3 vecPos;\n    varying vec3 vecNormal;\nvoid main() \n{ \n\t  vecPos = vec3(modelViewMatrix * vec4(position, 1.0));\n  \tvecNormal = normalize(normalMatrix * normal);\n\n\tvUV = uv;\n\tvec4 bumpData = texture2D( bumpTexture, uv );\n\t\n\tvAmount = bumpData.r; // assuming map is grayscale it doesn't matter if you use r, g, or b.\n\t\n\t// move the position along the normal\n    vec3 newPosition = position + normal * bumpScale * vAmount;\n\t\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n}\n  `\n}","import { TerrainMappingDB, testDict, meshMapping } from './TerrainTextureMapping.js'; \nimport { getData } from './getData';\nimport fragmentShader from './fragmentShader';\nimport vertexShader from './vertexShader';\nconst {WebGLRenderer, loadTexture, OctahedronBufferGeometry, SphereBufferGeometry, PlaneBufferGeometry, TextureLoader, Mesh, DataTexture , ClampToEdgeWrapping, ShaderMaterial, RGBFormat} = THREE;\n\nexport class TerrainGenerator {\n  constructor(csvUrl,terrain = 'testMapping', txtrLoad='') {\n    this.csvUrl = csvUrl;\n    this.terrain =  terrain;\n    this.txtrLoad = txtrLoad;\n    this.width = 0;\n    this.height = 0;\n    this.heightmapScale = 100;\n    this.dict = [];\n    this.boolean;\n  }\n  pos(x,y,z){\n    //this.scene.add(this.cube);\n    [this.cube.position.x, this.cube.position.y, this.cube.position.z] = [x,y,z];\n  }\n  //** Private Methods: **//\n  \n  //Transform data to buffer needed for shader DataTexture. \n  //The contents of a buffer object is always an 1-dimensional array. \n  _bufferDataTexture(){\n     return (async() => {\n        const _data = await getData(this.csvUrl);\n        this.width = Math.max(..._data.map(p => p.X), 0) + 1;\n        this.height = Math.max(..._data.map(p => p.Y), 0) + 1;\n        const _depth = Math.max(..._data.map(p => p.Z), 0); // +1 is not required for Z values since seeking for data max value\n       \tconst _Zmin = Math.min(..._data.map(p => p.Z));\n       \tconst _size = this.height * this.width;\n\t\t\t\n        const _buffer = new Uint8Array ( _size * 3 );\n      \n        for ( let i = 0; i < _data.length; i++ ) {\n          let stride = i * 3;\n            //if (  parseInt(_data[i]['X']) !== 0 && parseInt(_data[i]['Y']) !== 0  && parseInt(_data[i]['Y']) !== this.height-1 && parseInt(_data[i]['X']) !== this.width -1) {\n            \t\t//_buffer[ stride ] = Math.floor((255 * ( _data[i]['Y'] / _depth))); //normalize 0 to 255\n          _buffer[ stride ] =  _data[i]['Z'] ; //normalize 0 to 255\n          //_buffer[ stride + 1 ] = _data[i]['Y'];\n          //_buffer[ stride + 2 ] =  _data[i]['Z'];\n           //} else {\n           // \t\t_buffer[ stride ] =  Math.floor((255 * (_Zmin / _depth)));\n           // }\n        }   \n       console.log(_buffer)\n        return _buffer;\n       \n        })()\n  \t}\n\n  _heightmapTexture(){\n    \treturn (async() => {\n        \tlet _heightmapTexture\n          // only takes .png images, till current update\n      \t\tif (this.txtrLoad.substr(this.txtrLoad.length - 3) === 'png') {\n\t\t\t\t\t\t\tconsole.log(this.txtrLoad.substr(this.txtrLoad.length - 3))\n                let img = new Image();\n       \t\t\t\t\timg.src = this.txtrLoad;\n                this.width = 1000 * 1\n                this.height = 638 * 1\n\n    \t\t\t\t\t_heightmapTexture = new TextureLoader().load(this.txtrLoad);\n          } else {\n          \t\t_heightmapTexture =  new DataTexture(await this._bufferDataTexture(), this.width, this.height, RGBFormat); // value can change for future updates\n      \t\t}\t\n          _heightmapTexture.wrapS = _heightmapTexture.wrapT = ClampToEdgeWrapping;\n        \t_heightmapTexture.minFilter = THREE.LinearFilter;\n          return _heightmapTexture;\n      })()\n  }\n  \n  _uniformsGen(){\n    \treturn (async() => {\n          let _arr;\n          let _uniforms= THREE.UniformsUtils.merge([ \n            THREE.UniformsLib[\"lights\"],\n            {\n          lightIntensity: {type: 'f', value: 10},\n          bumpTexture: { type: \"t\", value: await this._heightmapTexture() },\n          bumpScale: { type: \"f\", value: this.heightmapScale },\n          } ])\n          _uniforms.bumpTexture.value =  await this._heightmapTexture()\t\n\n          \n          if (Array.isArray(this.dict) && !this.dict.length) {\n                this.dict = TerrainMappingDB[this.terrain];\n          } else {\n            \t\tthis.dict = meshMapping(this.dict);\n          }\n     \n          for ( let i = 0; i < this.dict.length; i++ ) {\n              _uniforms[this.dict[i]['texture']] = { type: \"f\", value: this.dict[i]['obj'] }\n          }\n          return _uniforms;\n        \t})()\n \n      }\n  \n  _randSmooth(txtrsL) {\n      let _arr = [];\n    \tlet _dict = [];\n    \tlet _sum = 0;\n      for(let i=0; i < txtrsL; i++) {\n      \t\t_arr[i] = Math.random();\n      }\n    \n      let _factor = _arr.reduce(function(_a,_b){ \n        \treturn _a+_b;}, 0);\n    \n\t\t\t_arr = _arr.map(function(_item) { return _sum += _item, (_sum / _factor).toFixed(2); });\n    \n      for(let i=0; i < _arr.length; i++) {\n        if (i === 0) {\n          \tif (parseFloat(_arr[i]) === 0){\n            \t\t_arr[i] = 0.02;\n            }\n              \n        \t\t_dict[i] = {smoothing:[0.01,  parseFloat(_arr[i])]};\n        } else if (i === (_arr.length-1)) {\n          \t_dict[i] = {smoothing: [ parseFloat(_arr[i-1]), parseFloat(_arr[i])-0.01]};\n        } else {\n          \tif (parseFloat(_arr[i]) === 1){\n            \t\t_arr[i] =_arr[i] - 0.02;\n            }\n          \t_dict[i] = {smoothing:[ parseFloat(_arr[i-1]),  parseFloat(_arr[i])]};\n        }\n      }\n      return _dict;\n    }\n  \n  _fragmentShader(rand){\n    if (rand === true) {  \n  \t\t\treturn fragmentShader(this.dict, this._randSmooth(5))\n      } else {\n     \t\treturn fragmentShader(this.dict)\n      }\n  }\n  \n\t_materials(){\n  \treturn (async() => {\n      \tlet _shaderMaterial =  new ShaderMaterial({\n          uniforms: await this._uniformsGen(),\n          fragmentShader: this._fragmentShader(this.boolean),\n          vertexShader: vertexShader(),\n          lights: true\n        })\n      \treturn _shaderMaterial;\n      })()\n  }\n  \n  //** Public Methods: **//\n  \n  loadMaterials(dict = [], random = false){\n  \t\tthis.dict = dict;\n    \tthis.boolean = random;\n  }\n  \n  mesh(){\n    return (async() => {\n      const materials = await this._materials();\n      materials.minFilter = THREE.LinearFilter;\n\t\t\tmaterials.magFilter = THREE.LinearFilter;\n      materials.generateMipmaps = false;\n      materials.needsUpdate = true;\n    \tconst _plane = new PlaneBufferGeometry(this.width, this.height, this.width / 2, this.height /2);\n      const _mesh = new Mesh(_plane,  materials);\n      //console.log(_plane.faces)\n   \t\treturn _mesh; })()\n  }\n  \n  \n\t}\n\n\n\n","const {\n  Scene,\n  Object3D,\n  PerspectiveCamera,\n  WebGLRenderer,\n  CanvasTexture,\n  Sprite,\n  SpriteMaterial,\n  loadTexture,\n  ImageUtils,\n  PointLight,\n  SpriteAlignment,\n  shadowMap,\n  BufferGeometry,\n  BufferGeometryUtils,\n  CubeTextureLoader,\n  MultiMaterial,\n  Raycaster,\n  Vector2,\n  Vector3,\n  vertices\n} = THREE \n\nimport {TerrainGenerator} from './TerrainGenerator.js';\nimport { getData, getWoW2018 } from './getData';\nimport { getJson } from './getJson';\nimport { Enum } from './Texture.js';\nimport fragmentShader from './fragmentShader';\nimport vertexShader from './vertexShader';\nimport {PieSprite, spriteTexture} from './PieSprite';\n//import {WoWZonesPosition, crtZonesSprites, textureUpdate, ZonesToSprites} from './PieSpritesPos';\n\n//GET JSON DATA\nconst run = async () => {\n  //return await getData()\n  return await getJson();\n};\n\nrun();\n\n// Tweakables\nconst scaleFactor = 4; // HiDPI\nconst height_OffsetFactor = 1\nconst width = window.innerWidth * scaleFactor;\nconst height = (window.innerHeight * scaleFactor)/height_OffsetFactor;\nconst rotationSensitivity = 0.04;\nconst rotationIncrement = -0.2;\n\nconsole.log(window.innerWidth,window.innerHeight )\n\n// Returns a color for a given datum and number of clusters.\nexport const camera = new PerspectiveCamera(20, width / height, 1, 10000);\nconst renderer = new WebGLRenderer({ antialias: true, alpha: false });\n\nrenderer.setSize(width, height);\ndocument.body.appendChild(renderer.domElement);\nrenderer.domElement.style.width = width / scaleFactor + 'px';\nrenderer.domElement.style.height = height / scaleFactor + 'px';\n\n//ORBIT CAMERA\nlet orbit_polarOffset = 0.05;\nlet controls = new THREE.OrbitControls(camera, renderer.domElement);\ncontrols.minDistance = 700;\ncontrols.maxDistance = 1750;\n//limits don't seee below water level\ncontrols.maxPolarAngle = Math.PI/2 - orbit_polarOffset; \n\n//FOG\nconst scene = new Scene();\n\n{\n    const near = 0;\n    const far = 5900;\n    const color = '#39479c'; //purple:#39479c  white: #EEEEEE  \n    scene.fog = new THREE.Fog(color, near, far);\n    scene.background = new THREE.Color(color);\n  }\n\n//RENDERER INFO\nconsole.log(renderer.info);\nrenderer.info.autoReset = false;\nrenderer.info.reset();\n\n//GROUND\nconst groundWidth = 10;\nconst groundHeight = 10;\nvar groundTexture = new THREE.TextureLoader().load(\n  'https://raw.githubusercontent.com/stemkoski/stemkoski.github.com/master/Three.js/images/checkerboard.jpg'\n);\ngroundTexture.wrapS = groundTexture.wrapT = THREE.RepeatWrapping;\ngroundTexture.repeat.set(groundWidth/4, groundHeight/4);\nvar groundMaterial = new THREE.MeshPhongMaterial({\n  map: groundTexture,\n  side: THREE.DoubleSide\n});\nvar groundGeometry = new THREE.PlaneGeometry(groundWidth, groundHeight);\nvar ground = new THREE.Mesh(groundGeometry, groundMaterial);\nscene.add(ground);\n\n//MAELSTROM\nconst maelstromWidth = 250;\nconst maelstromHeight = 250;\nvar maelstromTexture = new THREE.TextureLoader().load(\n  'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Maelstrom/malestrom_whirlpool_final.png'\n);\nmaelstromTexture.wrapS = maelstromTexture.wrapT = THREE.RepeatWrapping;\n//maelstromTexture.repeat.set(maelstrom/4, maelstrom/4);\nvar maelstromMaterial = new THREE.MeshPhongMaterial({\n  map: maelstromTexture,\n  side: THREE.DoubleSide,\n  transparent: true \n});\nvar maelstromGeometry = new THREE.PlaneGeometry(maelstromWidth, maelstromHeight);\nvar maelstrom = new THREE.Mesh(maelstromGeometry, maelstromMaterial);\nscene.add(maelstrom);\nmaelstrom.rotation.x = -Math.PI / 2;\nmaelstrom.position.set(26.704965349490447, 28.5, 27.248127853895203 );\n\n// MAELSTROM POINTLIGHT\nvar light = new THREE.PointLight( 0xff5d14, 20, 25 );\nlight.position.set(26.704965349490447, 29.5, 27.248127853895203 );\nscene.add( light );\n\nvar light_red = new THREE.PointLight( 0xff2845, 5, 15 );\nlight_red.position.set(26.704965349490447, 31.5, 27.248127853895203 );\nscene.add( light_red );\n\n//SKYBOX\nlet materialArray = [];\nlet texture_ft = new THREE.TextureLoader().load( 'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Skybox/deepholmsky_nebula02.png');\nlet texture_bk = new THREE.TextureLoader().load( 'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Skybox/deepholmsky_nebula02.png');\nlet texture_up = new THREE.TextureLoader().load( 'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Skybox/deepholmsky_nebula02.png');\nlet texture_dn = new THREE.TextureLoader().load( 'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Skybox/deepholmsky_nebula02.png');\nlet texture_rt = new THREE.TextureLoader().load( 'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Skybox/deepholmsky_nebula02.png');\nlet texture_lf = new THREE.TextureLoader().load( 'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Skybox/deepholmsky_nebula02.png');\n     \nmaterialArray.push(new THREE.MeshBasicMaterial( { map: texture_ft }));\nmaterialArray.push(new THREE.MeshBasicMaterial( { map: texture_bk }));\nmaterialArray.push(new THREE.MeshBasicMaterial( { map: texture_up }));\nmaterialArray.push(new THREE.MeshBasicMaterial( { map: texture_dn }));\nmaterialArray.push(new THREE.MeshBasicMaterial( { map: texture_rt }));\nmaterialArray.push(new THREE.MeshBasicMaterial( { map: texture_lf }));\n\nfor (let i = 0; i < 6; i++)\n  materialArray[i].side = THREE.BackSide;\n       \nlet skyboxGeo = new THREE.BoxGeometry( 6000, 4000, 6000);\nlet skybox = new THREE.Mesh( skyboxGeo, materialArray );\nscene.add( skybox );\n  \n// SEA WATER\nconst water = new THREE.PlaneBufferGeometry(10000, 10000, 1);\nconst waterTopLayer = new THREE.Mesh(water, new THREE.MeshBasicMaterial({color:0x001d28, transparent: true, opacity: 0.8, side: THREE.DoubleSide}));\nscene.add(waterTopLayer);\nwaterTopLayer.rotation.x = -Math.PI / 2;\nwaterTopLayer.position.y = 27.2;\n//water.receiveShadow = true;\n  \nconst waterBottomLayer = new THREE.Mesh(water, new THREE.MeshBasicMaterial({color:0x001d28, transparent: true, opacity: 1, side: THREE.DoubleSide}));\nscene.add(waterBottomLayer);\nwaterBottomLayer.rotation.x = -Math.PI / 2;\nwaterBottomLayer.position.y = 20.2;\n\n//INIT GROUND PARAMETERS\nconst epsilon = -0.5;\nground.rotation.x -= Math.PI / 2;\nground.position.z = groundWidth/2 + epsilon;\nground.position.x = groundHeight/2 + epsilon;\nground.position.y = epsilon;\n\n//THREE.AxesHelper\nvar axesHelper = new THREE.AxesHelper( 100 );\nscene.add( axesHelper );\n  \n//INIT CAMERA PARAMETERS\ncamera.position.set(-23.117049553082612, 1276.836651189303, 787.4602136419953);\n\n// WORLD GENERATOR (heighmap)\n\n//** heighmap Textures to generated the world **//\nconst heighmap = 'https://raw.githubusercontent.com/meperezcuello/dataviz-project-template-proposal/master/Azeroth_heigthmao.png'\n      \n//** heighmap Textures to generated the world using csv **//\n//const csvUrl = 'https://github.com/meperezcuello/dataviz-project-template-proposal/blob/master/azeroth_31_26_heighmap.png';\nconst csvUrl = 'https://gist.githubusercontent.com/meperezcuello/eb1f6c7dabe63443aa1dafa169e51d07/raw/1c7e70db4548e8ce7eaf9c9ba21391681462651c/mountain.csv'\n\n//** Custom Texture Mapping **//\nlet dict = [\n    {texture:'oceanTexture', repeatedness: 5, smoothing: [0.01, 0.50]}, //<-- this is bottom texture\n    {texture:'sandyTexture', repeatedness: 20, smoothing: [0.50, 0.55]},\n    {texture:'snowyTexture', repeatedness: 20, smoothing: [0.55, 0.65]},\n    {texture:'snowyTexture', repeatedness: 10, smoothing: [0.65, 0.75]},\n    {texture:'snowyTexture', repeatedness: 20, smoothing: [0.75, 0.99]}, // <-- this is top texture\n  ];\n\n//** Original Texture Mapping(using a image)**/\nlet wow = [\n    {texture:'wowtest', repeatedness: 1, smoothing: [0.01, 0.01]}, //<-- this is bottom texture\n  ];\n  \nconst TerrainMain = async() => {\n  \n  const terrain =  new TerrainGenerator(csvUrl,[],heighmap)\n  terrain.loadMaterials(wow);\n  return await terrain.mesh()\n  \n}\n\n\n// ASYNC FUNC LOAD WORLD MAP AND DATA\n(async() => {\n  \n  // TRIGGER VARIBLES\n  let lol = false;\n  let acti = false\n  let triggerShared = false //Flagged varible for annimation of camera \n  \n  const mesh = await TerrainMain();\n\tmesh.rotation.x = -Math.PI / 2;\n  mesh.position.y = 0;\n \tscene.add(mesh);\n\n    let controls2 = new function() {\n        this.rotationSpeed = 1;\n        this.bouncingSpeed = 0.03;\n     }\n\t\n\t//INTERSECT FUNCTION (obtains position and camera pos and roration on console)\n  var raycaster = new Raycaster();\n  var mouse = new Vector2();\n\n  let targetList = [];\n  targetList.push(mesh);\n  \n  function onDocumentMouseOver(event) {\n\n    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n    //var vector_2 = new Vector3( mouse.x, mouse.y, 1 ); \n\n    raycaster.setFromCamera( mouse, camera );\n\n    // calculate objects intersecting the picking ray\n    var intersects = raycaster.intersectObjects( targetList );\n    console.log(intersects[0])\n    if ( intersects[0]){\n      console.log(intersects[0].point)\n      }\n    console.log(camera.position)\n    console.log(camera.rotation)\n  }\n  \n  window.addEventListener( 'click', onDocumentMouseOver, false ); \n\n  // INIT TEXTURE LOADER (this triggers error)\n  let yey = 0\n  //let texture_0=spriteTexture('Durotar', yey);\n  \n  // dat.GUI INTERFACE (UI TOP RIGHT)\n\tconst gui = new dat.GUI();\n  const parameters = \n\t{\n\t\tDays: 0\n\t};\n  \n  let folder1 = gui.addFolder('Accumulative days');\n  let cubeX = folder1.add( parameters, 'Days' ).min(0).max(364).step(1).listen();\n  \tfolder1.open();\n   \tcubeX.onFinishChange(function(value) {\n  \t// Fires when a controller loses focus.\n    lol = true;\n  });\n \n\n  //PRE LOAD ALL TEXTURE TO A DICT (i.e. to obtain faste reponse from GUI)\n\tlet obj = {};\n\tasync function firstFunction(iter){\n \t\tfor (let i = 0; i < iter; i++) {\n   \tobj[i] = spriteTexture('Null', i);\n  \t}\n  \treturn obj;\t\n\t}  \n    \n\t//PRE-LOADER FUNC\n\tfunction showLoading() {\n  \tdocument.getElementById('wrapper2').style.display = 'block';\n\t}\n\n\tfunction hideLoading() {\n  \tdocument.getElementById('wrapper2').style.display = 'none';\n\t}\n\n\tlet data_heatmap = [] \n\tlet WoW2018 = []\n \n  try {\n    showLoading()\n   \tdocument.getElementById('wrapper-btn').style.display = 'none';\n    document.getElementById('timestamp').style.display = 'none';\n    document.getElementById('total_player').style.display = 'none';\n    document.getElementById('gradient_bar').style.display = 'none';\n    dat.GUI.toggleHide();\n    await firstFunction(351);\n    data_heatmap = await getJson(); \n   \tWoW2018 =  await getWoW2018();\n    \n    document.getElementById(\"video1\").src = 'https://www.youtube.com/embed/aDTlHXzA_cE?autoplay=1&loop=1';\n    \n  } catch (err) {\n    console.error(err);\n  } finally {\n    hideLoading();\n    document.getElementById('timestamp').style.display = 'block';\n\t\tdocument.getElementById('total_player').style.display = 'block';\n  \tdocument.getElementById('wrapper-btn').style.display = 'block';\n  }\n\n  //PLAY BUTTON \n\tdocument.getElementById(\"wrapper-btn\").onclick = function(){\n\t\tdocument.getElementById('wrapper-btn').style.display = 'none';\n\t\tacti = true;\n  }\n  \n  //ANIMATION\n  const animate = () => {\n      maelstrom.rotation.z -= 0.005\n\n      if (lol == true){\n\n        cubeX.onChange(function(value) {\n          yey = value;   \n        });\n\n        document.getElementById(\"timestamp\").innerHTML = WoW2018[parseInt(yey)]['timestamp'];\n        document.getElementById(\"total_player\").innerHTML = WoW2018[parseInt(yey)]['char'] + \" Players\";\n\n        let pre_obj = obj[yey];  \n        mesh.material.uniforms.wowtest.value  = pre_obj; \n\n        lol = false;\n      }\n\n      if (acti == true ){\n\n          yey += 0.1;\n          if (yey < 75) {\n\n            camera.position.x -= 1;\n            camera.position.z += 1;\n\n          } else if (yey < 150 ) {\n\n            if(triggerShared == false) {\n\n              camera.position.set(1035.117049553082612, 1.79836651189303, 76.4602136419953)        \n              triggerShared = true;\n\n          }\n              camera.position.x += 1;\n              camera.position.y += 1;\n\n          } else if (yey < 300 ) {\n\n            if(triggerShared == true) {\n\n              camera.position.set(-343.117049553082612, 250.49836651189303, 401.4602136419953) \n              triggerShared = false;\n\n            }\n\n            camera.position.y += 1;\n            camera.position.z += 1;\n\n          } else if (321 < yey ) {\n\n            if(triggerShared == false) {\n\n              camera.position.set(10.46149065128529, 4.7079728467133323e-14, 155.02824758128583)\n              triggerShared = true;\n\n            }\n\n            camera.position.y += 1;\n            camera.position.z += 1;\n\n          }\n\n          if (data_heatmap[parseInt(yey)][0][2] !== 0) {\n\n            document.getElementById(\"timestamp\").innerHTML = WoW2018[parseInt(yey)]['timestamp'];\n            document.getElementById(\"total_player\").innerHTML = WoW2018[parseInt(yey)]['char'] + \" Players\";\n            mesh.material.uniforms.wowtest.value = obj[parseInt(yey)]\n\n          }\n\n          if (parseInt(yey) == 351) {\n\n            yey = 0\n            acti = false;\n            dat.GUI.toggleHide();\n            document.getElementById('gradient_bar').style.display = 'block';\n            document.getElementById(\"timestamp\").style.bottom='3.75em';         \t\n            document.getElementById(\"total_player\").style.bottom='2.5em';\n\n          }\n      } \n\n\t\t//texture_0.needsUpdate = true\n  \trequestAnimationFrame(animate);\n \t\tcontrols.update();\n\t  renderer.render(scene, camera);\n    \n}; \nanimate();\n  })()"],"names":["csv","json","SpriteMaterial","Sprite","Texture","WebGLRenderer","TextureLoader","CanvasTexture","loadTexture","csvUrl"],"mappings":"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"}